{"version":3,"sources":["components/Navbar.js","components/TextInput.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","theme","to","title","type","id","a","b","onClick","togglerLight","name","value","htmlFor","togglerRed","togglerBlue","togglerGreen","defaultProps","c","TextInput","useState","text","setText","btnColor","color","heading","rows","onChange","event","target","disabled","length","style","backgroundColor","border","updatedText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","execCommand","replace","split","filter","element","About","NewStyle","borderColor","Alert","alert","alertColor","charAt","slice","msg","App","setmode","setAlert","message","setTimeout","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.aeede726.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Navbar.css\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Navbar(props) {\n  return (\n    <div>\n      <nav\n        className={`navbar navbar-expand-lg navbar-${props.mode.theme} bg-${props.mode.theme} `}\n      >\n        <div className=\"container-fluid\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            {props.title}\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" aria-current=\"page\" to=\"/about\">\n                  {props.a}\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/\">\n                  {props.b} \n                </Link>\n              </li>\n             \n              \n            </ul>\n            <form className=\"d-flex flex-wrap\">\n              <div className=\"form-check form-check-inline\">\n                <input\n                  onClick={props.togglerLight}\n                  className=\"form-check-input\"\n                  type=\"radio\"\n                  name=\"inlineRadioOptions\"\n                  id=\"inlineRadio4\"\n                  value=\"option4\"\n                />\n                <label className=\"form-check-label\" htmlFor=\"inlineRadio4\">\n                  Lightmode\n                </label>\n              </div>\n              <div className=\"form-check form-check-inline\">\n                <input\n                  onClick={props.togglerRed}\n                  className=\"form-check-input\"\n                  type=\"radio\"\n                  name=\"inlineRadioOptions\"\n                  id=\"inlineRadio1\"\n                  value=\"option1\"\n                />\n                <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">\n                  Redmode\n                </label>\n              </div>\n              <div  className=\"form-check form-check-inline\">\n                <input\n                onClick={props.togglerBlue}\n                  className=\"form-check-input\"\n                  type=\"radio\"\n                  name=\"inlineRadioOptions\"\n                  id=\"inlineRadio2\"\n                  value=\"option2\"\n                />\n                <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">\n                Bluemode\n                </label>\n              </div>\n              <div  className=\"form-check form-check-inline\">\n                <input\n                onClick={props.togglerGreen}\n                  className=\"form-check-input\"\n                  type=\"radio\"\n                  name=\"inlineRadioOptions\"\n                  id=\"inlineRadio3\"\n                  value=\"option3\"\n                />\n                <label className=\"form-check-label\" htmlFor=\"inlineRadio3\">\n                Greenmode\n                </label>\n              </div>\n\n              \n            </form>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n  a: PropTypes.string.isRequired,\n  b: PropTypes.string.isRequired,\n  c: PropTypes.string.isRequired,\n};\n\nNavbar.defaultProps = {\n  title: \"enter Title\",\n  a: \"first tab\",\n  b: \"second tab\",\n  c: \"third tab\",\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Textinput.css\";\n\nexport default function TextInput(props) {\n  const [text, setText] = useState(props.a);\n\n  const Uppercase = () => {\n    var updatedText = text.toUpperCase();\n    setText(updatedText);\n    props.showAlert(\"Text formatted to Upper case\",\"success\",\"warning\")\n  };\n  const Lowercase = () => {\n    var updatedText = text.toLowerCase();\n    setText(updatedText);\n    props.showAlert(\"Text formatted to Lower case\",\"success\",\"danger\")\n  };\n  const handleText = (event) => {\n    setText(event.target.value);\n  };\n  const  Copy=()=> {\n    let textarea = document.getElementById(\"mytext\");\n    textarea.select();\n    document.execCommand(\"copy\");\n    props.showAlert(\"Text Copied to Clipboard\",\"success\",\"success\")\n  }\n  const  ClearText=()=> {\n    setText(\"\")\n    props.showAlert(\"Text Cleared\",\"success\",\"warning\")\n  }\n  const  extraSpace=()=> {\n    var updatedText = text.replace(/  +/g, ' ')\n    setText(updatedText);\n    props.showAlert(\"extra spaces removed\",\"success\",\"success\")\n  }\n  var btnColor =\"\"\nif(props.mode.color===\"white\"){\n btnColor = \"\"\n}else if(props.mode.color===\"#003154\"){\n   btnColor = \"#003154\"\n\n}else if(props.mode.color===\"#690000\"){\n   btnColor = \"#690000\"\n\n}else if(props.mode.color===\"#00350c\"){\n   btnColor = \"#00350c\"\n\n}\n\n\n  return (\n    <>\n      <div className=\"container my-5\">\n        <div className=\"my-3\">\n          <h3>{props.heading}</h3>\n          <textarea\n            className=\"form-control\"\n            id=\"mytext\"\n            rows=\"8\"\n            value={text}\n            onChange={handleText}\n          ></textarea>\n          <button disabled={text.length===0} style={{backgroundColor:btnColor,border:\"solid 1px white\"}} className=\"btn btn-primary m-2 \" onClick={Uppercase}>\n            UpperCase\n          </button>\n          <button disabled={text.length===0}  style={{backgroundColor:btnColor,border:\"solid 1px white\"}} className=\"btn btn-primary m-2\" onClick={Lowercase}>\n            LowerCase\n          </button>\n          <button disabled={text.length===0} style={{backgroundColor:btnColor,border:\"solid 1px white\"}} className=\"btn btn-primary m-2\" onClick={Copy}>\n            CopyText\n          </button>\n          <button disabled={text.length===0} style={{backgroundColor:btnColor,border:\"solid 1px white\"}} className=\"btn btn-primary m-2\" onClick={ClearText}>\n            ClearText\n          </button>\n          <button disabled={text.length===0} style={{backgroundColor:btnColor,border:\"solid 1px white\"}} className=\"btn btn-primary m-2\" onClick={extraSpace}>\n            clear Extra space\n          </button>\n        </div>\n      </div>\n      <div className=\"container outer my-3\">\n        <div className=\"inner1\">\n         \n\n          <h2 style={{ color: props.mode.theme === \"dark\" ? \"yellow\":\"black\"  }}>\n            Your Text Summary\n          </h2>\n          <p>\n         \n          \n          \n           {text.split(\" \").filter((element)=>{return element.length !== 0}).length} words and {text.length} characters\n          </p>\n        \n\n          <p>read time - {0.008 * text.split(\" \").filter((element)=>{return element.length !== 0}).length}</p>\n          <h3 style={{ color: props.mode.theme === \"dark\" ? \"yellow\":\"black\"  }}>\n            Preview\n          </h3>\n          <p>{text.length > 0 ? text : \"enter some text to preview\"}</p>\n        </div>\n      </div>\n    </>\n  );\n}\nTextInput.propTypes = {\n  heading: PropTypes.string.isRequired,\n  a: PropTypes.string.isRequired,\n};\nTextInput.defaultProps = {\n  heading: \"enter you text\",\n  a: \"hello world\",\n};\n","\nexport default function About(props) {\n  \n\n  \n\n  var NewStyle = props.mode.color\n\n\n  return (\n    <>\n      <div className=\"accordion\" style={{backgroundColor:NewStyle,color:props.mode.theme===\"dark\"?\"white\":\"black\",borderColor:props.mode.theme===\"dark\"?\"white\":\"black\"}} id=\"accordionExample\">\n        <div className=\"accordion-item\" style={{backgroundColor:NewStyle,color:props.mode.theme===\"dark\"?\"white\":\"black\",borderColor:props.mode.theme===\"dark\"?\"white\":\"black\"}}>\n          <h2 className=\"accordion-header\" id=\"headingOne\">\n            <button\n              style={{backgroundColor:NewStyle,color:props.mode.theme===\"dark\"?\"white\":\"black\",borderColor:props.mode.theme===\"dark\"?\"white\":\"black\"}}\n              className=\"accordion-button\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#collapseOne\"\n              aria-expanded=\"true\"\n              aria-controls=\"collapseOne\"\n            >\n              Accordion Item #1\n            </button>\n          </h2>\n          <div\n            id=\"collapseOne\"\n            className=\"accordion-collapse collapse show\"\n            aria-labelledby=\"headingOne\"\n            data-bs-parent=\"#accordionExample\"\n          >\n            <div className=\"accordion-body\">\n              <strong>This is the first item's accordion body.</strong> It is\n              shown by default, until the collapse plugin adds the appropriate\n              classes that we use to style each element. These classes control\n              the overall appearance, as well as the showing and hiding via CSS\n              transitions. You can modify any of this with custom CSS or\n              overriding our default variables. It's also worth noting that just\n              about any HTML can go within the <code>.accordion-body</code>,\n              though the transition does limit overflow.\n            </div>\n          </div>\n        </div>\n        <div className=\"accordion-item\" style={{backgroundColor:NewStyle,color:props.mode.theme===\"dark\"?\"white\":\"black\",borderColor:props.mode.theme===\"dark\"?\"white\":\"black\"}}>\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\n            <button\n              style={{backgroundColor:NewStyle,color:props.mode.theme===\"dark\"?\"white\":\"black\",borderColor:props.mode.theme===\"dark\"?\"white\":\"black\"}}\n              className=\"accordion-button collapsed\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#collapseTwo\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapseTwo\"\n            >\n              Accordion Item #2\n            </button>\n          </h2>\n          <div\n            id=\"collapseTwo\"\n            className=\"accordion-collapse collapse\"\n            aria-labelledby=\"headingTwo\"\n            data-bs-parent=\"#accordionExample\"\n          >\n            <div className=\"accordion-body\">\n              <strong>This is the second item's accordion body.</strong> It is\n              hidden by default, until the collapse plugin adds the appropriate\n              classes that we use to style each element. These classes control\n              the overall appearance, as well as the showing and hiding via CSS\n              transitions. You can modify any of this with custom CSS or\n              overriding our default variables. It's also worth noting that just\n              about any HTML can go within the <code>.accordion-body</code>,\n              though the transition does limit overflow.\n            </div>\n          </div>\n        </div>\n        <div className=\"accordion-item\" style={{backgroundColor:NewStyle,color:props.mode.theme===\"dark\"?\"white\":\"black\",borderColor:props.mode.theme===\"dark\"?\"white\":\"black\"}}>\n          <h2 className=\"accordion-header\" id=\"headingThree\">\n            <button\n              style={{backgroundColor:NewStyle,color:props.mode.theme===\"dark\"?\"white\":\"black\",borderColor:props.mode.theme===\"dark\"?\"white\":\"black\"}}\n              className=\"accordion-button collapsed\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#collapseThree\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapseThree\"\n            >\n              Accordion Item #3\n            </button>\n          </h2>\n          <div\n            id=\"collapseThree\"\n            className=\"accordion-collapse collapse\"\n            aria-labelledby=\"headingThree\"\n            data-bs-parent=\"#accordionExample\"\n          >\n            <div className=\"accordion-body\">\n              <strong>This is the third item's accordion body.</strong> It is\n              hidden by default, until the collapse plugin adds the appropriate\n              classes that we use to style each element. These classes control\n              the overall appearance, as well as the showing and hiding via CSS\n              transitions. You can modify any of this with custom CSS or\n              overriding our default variables. It's also worth noting that just\n              about any HTML can go within the <code>.accordion-body</code>,\n              though the transition does limit overflow.\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* <div className=\"form-check form-switch\">\n        <input\n          className=\"form-check-input\"\n          onClick={darkMode}\n          type=\"checkbox\"\n          id=\"flexSwitchCheckDefault\"\n        />\n        <label className=\"form-check-label\" for=\"flexSwitchCheckDefault\">\n          Dark mode\n        </label>\n      </div> */}\n    </>\n  );\n}\n","import React from \"react\";\nimport './Navbar.css'\n\nexport default function Alert(props) {\n  return (\n    props.alert && (\n      <div className=\"container alertUpper\">\n        <div\n          className={`alert alert-${props.alert.alertColor} \" role=\"alert  fade show fixed-top alertIMP`}\n        >\n          <strong>\n            {props.alert.type.charAt(0).toUpperCase() +\n              props.alert.type.slice(\"1\")}\n          </strong>{\" \"}\n          {props.alert.msg}\n        </div>\n      </div>\n    )\n  );\n}\n","import Navbar from \"./components/Navbar\";\nimport \"./App.css\";\nimport TextInput from \"./components/TextInput\";\nimport About from './components/About';\nimport { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  \n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState({\n    theme : \"light\",\n    color : \"white\"\n  });\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type, alertColor) => {\n    setAlert({\n      msg: message,\n      type: type,\n      alertColor: alertColor,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleModeLight = () => {\n    if (mode.color !== \"white\") {\n      setmode({\n        theme : \"light\",\n        color : \"white\"\n      });\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n      showAlert(\"Light mode enabled\", \"success\", \"success\");\n    }\n  };\n  const toggleModeBlue = () => {\n    if (mode.color !== \"#003154\") {\n      setmode({\n        theme : \"dark\",\n        color : \"#003154\"\n      });\n      document.body.style.backgroundColor = \"#003154\";\n      document.body.style.color = \"white\";\n      showAlert(\"Blue mode enabled\", \"success\", \"success\");\n    }\n  };\n  const toggleModeRed = () => {\n    if (mode.color !== \"#690000\") {\n      setmode({\n        theme : \"dark\",\n        color : \"#690000\"\n      });\n      document.body.style.backgroundColor = \"#690000\";\n      document.body.style.color = \"white\";\n      showAlert(\"Red mode enabled\", \"success\", \"success\");\n    }\n  };\n  const toggleModeGreen = () => {\n    if (mode.color !== \"#00350c\") {\n      setmode({\n        theme : \"dark\",\n        color : \"#00350c\"\n      });\n      document.body.style.backgroundColor = \"#00350c\";\n      document.body.style.color = \"white\";\n      showAlert(\"Green mode enabled\", \"success\", \"success\");\n    }\n  };\n\n  return (\n    <>\n   <Router>\n      <Navbar\n        title=\"TextUtils\"\n        a=\"About\"\n        b=\"Text\"\n        c=\"FollowUs\"\n        mode={mode}\n        togglerLight={toggleModeLight}\n        togglerBlue={toggleModeBlue}\n        togglerRed={toggleModeRed}\n        togglerGreen={toggleModeGreen}\n        showAlert={showAlert}\n      />\n      <Alert alert={alert} />\n      <Switch>\n        <Route exact path=\"/about\" >\n          <About mode={mode}/>\n      </Route>\n         \n          \n          <Route exact path=\"/\">\n          <TextInput\n        heading=\"enter your text to analyze\"\n        a=\"\"\n        mode={mode}\n        showAlert={showAlert}\n      />\n     </Route>\n     </Switch>\n     </Router>      \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}